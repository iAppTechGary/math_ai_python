from django.http import JsonResponsefrom django.conf import settingsclass StaticAuthMiddleware:    def __init__(self, get_response):        self.get_response = get_response    def __call__(self, request):        # Apply only if path starts with `/api`        if request.path.startswith("/api"):            auth_header = request.headers.get('User-Agent')            print("HEADERS:", auth_header)            if not auth_header:                return JsonResponse({"error": "Missing security_token header."}, status=401)            try:                prefix, token = auth_header.strip().split(" ")                if prefix.lower() != "token":                    raise ValueError("Invalid auth prefix")            except ValueError:                return JsonResponse({"error": "Invalid security_token format"}, status=401)            if token != settings.STATIC_AUTH_TOKEN:                return JsonResponse({"error": "Invalid token."}, status=401)        # If path is not /api or token is valid        return self.get_response(request)